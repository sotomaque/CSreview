/*
  This question is asked by Google. You are given two strings, s and t which only
  consist of lowercase letters. t is generated by shuffling the letters in s as well
  as potentially adding an additional random character. Return the letter that was
  randomly added to t if it exists, otherwise, return ’ ‘.

  Note: You may assume that at most one additional character can be added to t.

  i.e.
  s = "foobar", t = "barfoot", return 't'
  s = "ide", t = "idea", return 'a'
  s = "coding", t "ingcod", return ''
*/

/**
 * time-complexity:
 *  - O(n) where n is the total num of chars between s and t
 *
 * space-complexity:
 *  - O(n) where n is the total chars in s
 *
 * @param {*} s
 * @param {*} t
 */
function spotTheDifference(s, t) {
  // return letter in t that does not exist in s?
  // iterate through s making a hashmap of char counts
  let myMap = new Map();
  for (const char of s) {
    if (myMap.has(char)) {
      myMap.set(char, myMap.get(char) + 1);
    } else {
      myMap.set(char, 1);
    }
  }
  // iterate through t
  for (const char of t) {
    if (!myMap.has(char) || myMap.get(char) === 0) {
      return char;
    } else {
      myMap.set(char, myMap.get(char) - 1);
    }
  }

  return ' ';
}
console.log(spotTheDifference('foobar', 'barfoot'));
